@model JobBoard.Data.EF.Application

@{
    ViewBag.Title = "Edit Application for: " + Model.UserDetail.FullName;
}

<div class="container">
    <h2>@ViewBag.Title</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ApplicationId)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.OpenPositionId)
        @Html.HiddenFor(model => model.ApplicationDate)



        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UserId)
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserDetail.FullName, "Full Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.UserDetail.FullName)
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpenPositionId, "Open Position", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.OpenPositionId)
                @Html.ValidationMessageFor(model => model.OpenPositionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ApplicationDate)
                @Html.ValidationMessageFor(model => model.ApplicationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationStatusId, "Application Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ApplicationStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
            @if (Model.ResumeFilename != null)
            {

                <div class="col-md-10">
                    <a href="@Url.Content("~/Content/Resumes/"+ Model.ResumeFilename)" target="_blank">Click to View Resume!</a>

                </div>

            }

            else
            {
                <div class="col-md-10">
                    <p>N/A</p>
                </div>

            }
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
